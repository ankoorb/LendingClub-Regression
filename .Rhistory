scale_fill_gradient(low = "black", high = "red", name = "Violent Crime\nDensity") +
scale_alpha(range = c(0.05, 0.3), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
LA = c(lon = -118.2437, lat =  34.05223)
LA.map = get_map(location = LA, zoom = 11, maptype = 'terrain')
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% violent + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 2, bins = 10, geom = 'polygon') +
scale_fill_gradient(low = "black", high = "red", name = "Violent Crime\nDensity") +
scale_alpha(range = c(0.05, 0.3), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
LA = c(lon = -118.2437, lat =  34.05223)
LA.map = get_map(location = LA, zoom = 12, maptype = 'terrain')
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% violent + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 2, bins = 10, geom = 'polygon') +
scale_fill_gradient(low = "black", high = "red", name = "Violent Crime\nDensity") +
scale_alpha(range = c(0.05, 0.3), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
geocode("Huntington Park")
LA = c(lon = -118.2251, lat =  33.98168)
LA.map = get_map(location = LA, zoom = 12, maptype = 'terrain')
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% violent + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 2, bins = 10, geom = 'polygon') +
scale_fill_gradient(low = "black", high = "red", name = "Violent Crime\nDensity") +
scale_alpha(range = c(0.05, 0.3), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
LA = c(lon = -118.2437, lat =  34.05223)
LA.map = get_map(location = LA, zoom = 12, maptype = 'terrain')
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% violent + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 2, bins = 10, geom = 'polygon') +
scale_fill_gradient(low = "black", high = "red", name = "Violent Crime\nDensity") +
scale_alpha(range = c(0.05, 0.3), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
geocode("Vernon")
geocode("Vernon, CA")
LA = c(lon = -118.2301, lat =  34.0039)
LA.map = get_map(location = LA, zoom = 12, maptype = 'terrain')
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% violent + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 2, bins = 10, geom = 'polygon') +
scale_fill_gradient(low = "black", high = "red", name = "Violent Crime\nDensity") +
scale_alpha(range = c(0.05, 0.3), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% violent + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 2, bins = 10, geom = 'polygon') +
scale_fill_gradient(low = "black", high = "red", name = "Violent Crime\nDensity") +
scale_alpha(range = c(0.05, 0.3), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14)) +
facet_wrap(~ Time)
violent$Violent <- factor(violent$Violent)
LA.map = qmap(location = LA, zoom = 11, source = "stamen", maptype = 'toner')
LA.map + geom_point(data = violent, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "#1d91c0") +
facet_wrap(~ Time)
LA.map + geom_point(data = violent, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "#1d91c0") +
facet_wrap(~ Quarter)
LA.map + geom_point(data = violent, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "red") +
facet_wrap(~ Day)
geocode("Vernon, CA")
LA = c(lon = -118.2301, lat =  34.0039)
LA.map = get_map(location = LA, zoom = 12, maptype = 'terrain')
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% violent + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 2, bins = 10, geom = 'polygon') +
scale_fill_gradient(low = "black", high = "red", name = "Violent Crime\nDensity") +
scale_alpha(range = c(0.05, 0.3), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
LA.map = qmap(location = LA, zoom = 11, source = "stamen", maptype = 'toner')
LA.map + geom_point(data = violent, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "red") +
facet_wrap(~ Day)
getwd()
setwd('/Users/Ankoor/Documents/Git/Map-Plotting/LosAngelesCrime')
# Read Data
crime <- read.csv("LAPD_Crime_and_Collision_Raw_Data_for_2013.csv", stringsAsFactors = FALSE)
# Latitude and Longitude data is in string format: "(34.0496, -118.265)". Need to clean this column by removing "(" and ")" then splitting the string "34.0496, -118.265" into separate Longitude and Latitude columns based on comma and single space: ", "
# Cleaning Location Column to extract Longitude and Latitude
crime$Location <- gsub("\\(|\\)", "", crime$Location.1)
temp_1 <- sapply(strsplit(crime$Location, ", ", fixed = TRUE), "[",1)
temp_2 <- sapply(strsplit(crime$Location, ", ", fixed = TRUE), "[",2)
crime$Lat <- as.numeric(temp_1)
crime$Long <- as.numeric(temp_2)
# Keeping necessary Columns
names(crime)
keep <- c('DATE.OCC', 'TIME.OCC', 'AREA.NAME', 'Crm.Cd','Crm.Cd.Desc', 'Lat', 'Long')
crime <- crime[keep]
# Date is in string format: "12/31/2013". Need to convert date from "string" to "date" format used in R and then get weekdays.
# Cleaning Date Column
crime$DATE.OCC <- as.Date(crime$DATE.OCC, "%m/%d/%Y")
crime$Day <- weekdays(crime$DATE.OCC)
crime$Quarter <- crime$TIME.OCC
crime$Quarter[which(crime$TIME.OCC < 600)] <- 'First'
crime$Quarter[which(crime$TIME.OCC >= 600 & crime$TIME.OCC < 1200)] <- 'Second'
crime$Quarter[which(crime$TIME.OCC >= 1200 & crime$TIME.OCC < 1800)] <- 'Third'
crime$Quarter[which(crime$TIME.OCC >= 1800)] <- 'Fourth'
# Get Longitude and Latitude
geocode("Los Angeles")
# Get Google Map
LA = c(lon = -118.2437, lat =  34.05223)
LA.map = get_map(location = LA, zoom = 11, maptype = 'terrain')
# Plotting Crime Density Map
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% crime + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 5, bins = 20, geom = 'polygon') +
scale_fill_continuous(low = 'black', high = 'red', name = "Crime\nDensity") +
scale_alpha(range = c(0.05, 0.25), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
library(ggmap)
library(ggplot2)
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% crime + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 5, bins = 20, geom = 'polygon') +
scale_fill_continuous(low = 'black', high = 'red', name = "Crime\nDensity") +
scale_alpha(range = c(0.05, 0.25), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
# Get Google Map
LA = c(lon = -118.2437, lat =  34.05223)
LA.map = get_map(location = LA, zoom = 11, maptype = 'terrain')
# Plotting Crime Density Map
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% crime + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 5, bins = 20, geom = 'polygon') +
scale_fill_continuous(low = 'black', high = 'red', name = "Crime\nDensity") +
scale_alpha(range = c(0.05, 0.25), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
cd <- ggmap(LA.map, extent = "normal", maprange=FALSE) %+% crime + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 5, bins = 20, geom = 'polygon') +
scale_fill_continuous(low = 'black', high = 'red', name = "Crime\nDensity") +
scale_alpha(range = c(0.05, 0.25), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
collision <- subset(crime, Crm.Cd.Desc == 'TRAFFIC DR #')
names(collision)[5]<-"Collision"
# Get Stamen Map
LA.map = qmap(location = LA, zoom = 11, source = "stamen", maptype = 'toner')
# Plotting Collision Map (I used color = #cb181d" from Color Brewer)
LA.map + geom_point(data = collision, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "#cb181d")
laC <- LA.map + geom_point(data = collision, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "#cb181d")
laCW <- LA.map + geom_point(data = collision, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "#0c2c84") + facet_wrap(~ Day)
laCQ <- LA.map + geom_point(data = collision, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "#0c2c84") + facet_wrap(~ Quarter)
geocode("Hollywood")
LA = c(lon = -118.3287, lat =  34.09281)
LA.map = get_map(location = LA, zoom = 11, maptype = 'terrain')
laCD <- ggmap(LA.map, extent = "normal", maprange=FALSE) %+% collision + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 2, bins = 15, geom = 'polygon') +
scale_fill_gradient(low = "red", high = "#081d58", name = "Collision\nDensity") +
scale_alpha(range = c(0.05, 0.3), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
violent <- subset(crime, Crm.Cd.Desc == 'ROBBERY' | Crm.Cd.Desc == 'ASSAULT WITH DEADLY WEAPON, AGGRAVATED ASSAULT' |
Crm.Cd.Desc == 'RAPE, ATTEMPTED' | Crm.Cd.Desc == 'CRIMINAL HOMICIDE' |
Crm.Cd.Desc == 'CRIMINAL HOMICIDE' | Crm.Cd.Desc == 'ASSAULT WITH DEADLY WEAPON ON POLICE OFFICER' |
Crm.Cd.Desc == 'RAPE, FORCIBLE' | Crm.Cd.Desc == 'HOMICIDE (NON-UCR)')
names(violent)[5] <-"Violent"
violent$Violent <- factor(violent$Violent)
geocode("Vernon, CA")
LA = c(lon = -118.2301, lat =  34.0039)
LA.map = get_map(location = LA, zoom = 12, maptype = 'terrain')
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% violent + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 2, bins = 10, geom = 'polygon') +
scale_fill_gradient(low = "black", high = "red", name = "Violent Crime\nDensity") +
scale_alpha(range = c(0.05, 0.3), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
laVCD <- ggmap(LA.map, extent = "normal", maprange=FALSE) %+% violent + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 2, bins = 10, geom = 'polygon') +
scale_fill_gradient(low = "black", high = "red", name = "Violent Crime\nDensity") +
scale_alpha(range = c(0.05, 0.3), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
LA.map <- qmap(location = LA, zoom = 11, source = "stamen", maptype = 'toner')
laVCW <- LA.map + geom_point(data = violent, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "red") + facet_wrap(~ Day)
pdf("LA_Crime_Density.pdf", width = 11, height = 11)
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% crime + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 5, bins = 20, geom = 'polygon') +
scale_fill_continuous(low = 'black', high = 'red', name = "Crime\nDensity") +
scale_alpha(range = c(0.05, 0.25), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
dev.off()
pdf("LA_Crime_Density.pdf", width = 11, height = 11)
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% crime + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 5, bins = 20, geom = 'polygon') +
scale_fill_continuous(low = 'black', high = 'red', name = "Crime\nDensity") +
scale_alpha(range = c(0.05, 0.25), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
dev.off()
jpeg("LA_Crime_Density.jpeg", width = 11, height = 11)
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% crime + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 5, bins = 20, geom = 'polygon') +
scale_fill_continuous(low = 'black', high = 'red', name = "Crime\nDensity") +
scale_alpha(range = c(0.05, 0.25), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
dev.off()
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% crime + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 5, bins = 20, geom = 'polygon') +
scale_fill_continuous(low = 'black', high = 'red', name = "Crime\nDensity") +
scale_alpha(range = c(0.05, 0.25), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
#dev.off()
ggsave("plot.pdf", width = 11, height = 11)
# Get Longitude and Latitude
geocode("Los Angeles")
# Get Google Map
LA = c(lon = -118.2437, lat =  34.05223)
LA.map = get_map(location = LA, zoom = 11, maptype = 'terrain')
pdf("LA_Crime_Density.pdf", width = 11, height = 11)
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% crime + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 5, bins = 20, geom = 'polygon') +
scale_fill_continuous(low = 'black', high = 'red', name = "Crime\nDensity") +
scale_alpha(range = c(0.05, 0.25), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
dev.off()
library(ggmap)
library(ggplot2)
getwd()
setwd('/Users/Ankoor/Documents/Git/Map-Plotting/LosAngelesCrime')
# Read Data
crime <- read.csv("LAPD_Crime_and_Collision_Raw_Data_for_2013.csv", stringsAsFactors = FALSE)
## Latitude and Longitude data is in string format: "(34.0496, -118.265)". Need to clean this column by removing "(" and ")" then splitting the string "34.0496, -118.265" into separate Longitude and Latitude columns based on comma and single space: ", "
# Cleaning Location Column to extract Longitude and Latitude
crime$Location <- gsub("\\(|\\)", "", crime$Location.1)
temp_1 <- sapply(strsplit(crime$Location, ", ", fixed = TRUE), "[",1)
temp_2 <- sapply(strsplit(crime$Location, ", ", fixed = TRUE), "[",2)
crime$Lat <- as.numeric(temp_1)
crime$Long <- as.numeric(temp_2)
# Keeping necessary Columns
names(crime)
keep <- c('DATE.OCC', 'TIME.OCC', 'AREA.NAME', 'Crm.Cd','Crm.Cd.Desc', 'Lat', 'Long')
crime <- crime[keep]
## Date is in string format: "12/31/2013". Need to convert date from "string" to "date" format used in R and then get weekdays.
# Cleaning Date Column
crime$DATE.OCC <- as.Date(crime$DATE.OCC, "%m/%d/%Y")
crime$Day <- weekdays(crime$DATE.OCC)
## Time data is in 24-hour format (Military time). To visualize temporal variation in crimes I decided to assign Time in 4 quarters of a day as follows: 0 to 600 hours = First Quarter, 601 to 1200 hours = Second Quarter, 1201 to 1800 hours = Third Quarter and 1801 to 2400 hours = Fourth Quarter
# Quarters in a day
crime$Quarter <- crime$TIME.OCC
crime$Quarter[which(crime$TIME.OCC < 600)] <- 'First'
crime$Quarter[which(crime$TIME.OCC >= 600 & crime$TIME.OCC < 1200)] <- 'Second'
crime$Quarter[which(crime$TIME.OCC >= 1200 & crime$TIME.OCC < 1800)] <- 'Third'
crime$Quarter[which(crime$TIME.OCC >= 1800)] <- 'Fourth'
## Now creating maps
# Get Longitude and Latitude
geocode("Los Angeles")
# Get Google Map
LA = c(lon = -118.2437, lat =  34.05223)
LA.map = get_map(location = LA, zoom = 11, maptype = 'terrain')
# Plotting Crime Density Map
pdf("LA_Crime_Density.pdf", width = 11, height = 11)
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% crime + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 5, bins = 20, geom = 'polygon') +
scale_fill_continuous(low = 'black', high = 'red', name = "Crime\nDensity") +
scale_alpha(range = c(0.05, 0.25), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
dev.off()
pdf("LA_Crime_Density_Weekday_Variation.pdf", width = 11, height = 11)
LA.map + geom_point(data = collision, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "#0c2c84") + facet_wrap(~ Day)
collision <- subset(crime, Crm.Cd.Desc == 'TRAFFIC DR #')
names(collision)[5]<-"Collision"
# Get Stamen Map
LA.map = qmap(location = LA, zoom = 11, source = "stamen", maptype = 'toner')
# Plotting Collision Map (I used color = #cb181d" from Color Brewer)
pdf("LA_Collision.pdf", width = 11, height = 11)
LA.map + geom_point(data = collision, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "#cb181d")
dev.off()
# Plotting Collision Map to Visualize Weekday Variation in Collisions
pdf("LA_Crime_Density_Weekday_Variation.pdf", width = 11, height = 11)
LA.map + geom_point(data = collision, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "#0c2c84") + facet_wrap(~ Day)
dev.off()
pdf("LA_Collision_Weekday_Variation.pdf", width = 11, height = 11)
LA.map + geom_point(data = collision, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "#0c2c84") + facet_wrap(~ Day)
dev.off()
pdf("LA_Collision_Temporal_Variation.pdf", width = 11, height = 11)
LA.map + geom_point(data = collision, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "#0c2c84") + facet_wrap(~ Quarter)
dev.off()
geocode("Hollywood")
LA = c(lon = -118.3287, lat =  34.09281)
LA.map = get_map(location = LA, zoom = 11, maptype = 'terrain')
pdf("LA_Collision_Density.pdf", width = 11, height = 11)
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% collision + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 2, bins = 15, geom = 'polygon') +
scale_fill_gradient(low = "red", high = "#081d58", name = "Collision\nDensity") +
scale_alpha(range = c(0.05, 0.3), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
dev.off()
# Creating subset of Crime data based on Crime Code Description for Violent Crimes
violent <- subset(crime, Crm.Cd.Desc == 'ROBBERY' | Crm.Cd.Desc == 'ASSAULT WITH DEADLY WEAPON, AGGRAVATED ASSAULT' |
Crm.Cd.Desc == 'RAPE, ATTEMPTED' | Crm.Cd.Desc == 'CRIMINAL HOMICIDE' |
Crm.Cd.Desc == 'CRIMINAL HOMICIDE' | Crm.Cd.Desc == 'ASSAULT WITH DEADLY WEAPON ON POLICE OFFICER' |
Crm.Cd.Desc == 'RAPE, FORCIBLE' | Crm.Cd.Desc == 'HOMICIDE (NON-UCR)')
names(violent)[5] <-"Violent"
violent$Violent <- factor(violent$Violent)
# Plotting Violent Crime Density Map
geocode("Vernon, CA")
LA = c(lon = -118.2301, lat =  34.0039)
LA.map = get_map(location = LA, zoom = 12, maptype = 'terrain')
pdf("LA_Violent_Crime_Density.pdf", width = 11, height = 11)
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% violent + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 2, bins = 10, geom = 'polygon') +
scale_fill_gradient(low = "black", high = "red", name = "Violent Crime\nDensity") +
scale_alpha(range = c(0.05, 0.3), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
dev.off()
LA.map <- qmap(location = LA, zoom = 11, source = "stamen", maptype = 'toner')
pdf("LA_Collision_Weekday_Variation.pdf", width = 11, height = 11)
LA.map + geom_point(data = violent, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "red") + facet_wrap(~ Day)
dev.off()
library(ggmap)
library(ggplot2)
getwd()
setwd('/Users/Ankoor/Documents/Git/Map-Plotting/LosAngelesCrime')
# Read Data
crime <- read.csv("LAPD_Crime_and_Collision_Raw_Data_for_2013.csv", stringsAsFactors = FALSE)
## Latitude and Longitude data is in string format: "(34.0496, -118.265)". Need to clean this column by removing "(" and ")" then splitting the string "34.0496, -118.265" into separate Longitude and Latitude columns based on comma and single space: ", "
# Cleaning Location Column to extract Longitude and Latitude
crime$Location <- gsub("\\(|\\)", "", crime$Location.1)
temp_1 <- sapply(strsplit(crime$Location, ", ", fixed = TRUE), "[",1)
temp_2 <- sapply(strsplit(crime$Location, ", ", fixed = TRUE), "[",2)
crime$Lat <- as.numeric(temp_1)
crime$Long <- as.numeric(temp_2)
# Keeping necessary Columns
names(crime)
keep <- c('DATE.OCC', 'TIME.OCC', 'AREA.NAME', 'Crm.Cd','Crm.Cd.Desc', 'Lat', 'Long')
crime <- crime[keep]
## Date is in string format: "12/31/2013". Need to convert date from "string" to "date" format used in R and then get weekdays.
# Cleaning Date Column
crime$DATE.OCC <- as.Date(crime$DATE.OCC, "%m/%d/%Y")
crime$Day <- weekdays(crime$DATE.OCC)
## Time data is in 24-hour format (Military time). To visualize temporal variation in crimes I decided to assign Time in 4 quarters of a day as follows: 0 to 600 hours = First Quarter, 601 to 1200 hours = Second Quarter, 1201 to 1800 hours = Third Quarter and 1801 to 2400 hours = Fourth Quarter
# Quarters in a day
crime$Quarter <- crime$TIME.OCC
crime$Quarter[which(crime$TIME.OCC < 600)] <- 'First'
crime$Quarter[which(crime$TIME.OCC >= 600 & crime$TIME.OCC < 1200)] <- 'Second'
crime$Quarter[which(crime$TIME.OCC >= 1200 & crime$TIME.OCC < 1800)] <- 'Third'
crime$Quarter[which(crime$TIME.OCC >= 1800)] <- 'Fourth'
## Now creating maps
# Get Longitude and Latitude
geocode("Los Angeles")
# Get Google Map
LA = c(lon = -118.2437, lat =  34.05223)
LA.map = get_map(location = LA, zoom = 11, maptype = 'terrain')
# Plotting Crime Density Map
pdf("LA_Crime_Density.pdf", width = 11, height = 11)
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% crime + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 5, bins = 20, geom = 'polygon') +
scale_fill_continuous(low = 'black', high = 'red', name = "Crime\nDensity") +
scale_alpha(range = c(0.05, 0.25), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
dev.off()
##Vehicle Collision/Accident Maps
# Creating subset of Crime data based on Crime Code Description for Collision
collision <- subset(crime, Crm.Cd.Desc == 'TRAFFIC DR #')
names(collision)[5]<-"Collision"
# Get Stamen Map
LA.map = qmap(location = LA, zoom = 11, source = "stamen", maptype = 'toner')
# Plotting Collision Map (I used color = #cb181d" from Color Brewer)
pdf("LA_Collision.pdf", width = 11, height = 11)
LA.map + geom_point(data = collision, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "#cb181d")
dev.off()
# Plotting Collision Map to Visualize Weekday Variation in Collisions
pdf("LA_Collision_Weekday_Variation.pdf", width = 11, height = 11)
LA.map + geom_point(data = collision, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "#0c2c84") + facet_wrap(~ Day)
dev.off()
# Plotting Collision Map to Visualize Temporal (Quarter based) Variation in Collisions
pdf("LA_Collision_Temporal_Variation.pdf", width = 11, height = 11)
LA.map + geom_point(data = collision, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "#0c2c84") + facet_wrap(~ Quarter)
dev.off()
# Plotting Collision Density Map
geocode("Hollywood")
LA = c(lon = -118.3287, lat =  34.09281)
LA.map = get_map(location = LA, zoom = 11, maptype = 'terrain')
pdf("LA_Collision_Density.pdf", width = 11, height = 11)
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% collision + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 2, bins = 15, geom = 'polygon') +
scale_fill_gradient(low = "red", high = "#081d58", name = "Collision\nDensity") +
scale_alpha(range = c(0.05, 0.3), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
dev.off()
# Creating subset of Crime data based on Crime Code Description for Violent Crimes
violent <- subset(crime, Crm.Cd.Desc == 'ROBBERY' | Crm.Cd.Desc == 'ASSAULT WITH DEADLY WEAPON, AGGRAVATED ASSAULT' |
Crm.Cd.Desc == 'RAPE, ATTEMPTED' | Crm.Cd.Desc == 'CRIMINAL HOMICIDE' |
Crm.Cd.Desc == 'CRIMINAL HOMICIDE' | Crm.Cd.Desc == 'ASSAULT WITH DEADLY WEAPON ON POLICE OFFICER' |
Crm.Cd.Desc == 'RAPE, FORCIBLE' | Crm.Cd.Desc == 'HOMICIDE (NON-UCR)')
names(violent)[5] <-"Violent"
violent$Violent <- factor(violent$Violent)
# Plotting Violent Crime Density Map
geocode("Vernon, CA")
LA = c(lon = -118.2301, lat =  34.0039)
LA.map = get_map(location = LA, zoom = 12, maptype = 'terrain')
pdf("LA_Violent_Crime_Density.pdf", width = 11, height = 11)
ggmap(LA.map, extent = "normal", maprange=FALSE) %+% violent + aes(x = Long, y = Lat) +
stat_density2d(aes(fill = ..level.., alpha = ..level..), size = 2, bins = 10, geom = 'polygon') +
scale_fill_gradient(low = "black", high = "red", name = "Violent Crime\nDensity") +
scale_alpha(range = c(0.05, 0.3), guide = FALSE) +
coord_map(projection = "mercator",
xlim = c(attr(LA.map, "bb")$ll.lon, attr(LA.map, "bb")$ur.lon),
ylim = c(attr(LA.map, "bb")$ll.lat, attr(LA.map, "bb")$ur.lat)) +
theme(legend.justification=c(1,0), legend.position=c(1,0),axis.title = element_blank(), text = element_text(size = 14))
dev.off()
# Plotting Map to Visualize Weekday Variation in Violent Crimes
LA.map <- qmap(location = LA, zoom = 11, source = "stamen", maptype = 'toner')
pdf("LA_Violent_Crime_Weekday_Variation.pdf", width = 11, height = 11)
LA.map + geom_point(data = violent, aes(x = Long, y = Lat), size = 2, alpha = 0.1, color = "red") + facet_wrap(~ Day)
dev.off()
getwd
getwd()
sessionInfo()
# Set working director
setwd("/Users/Ankoor/Documents/Git/LendingClub-Regression")
# Get file form the internet
fileUrl <- "https://spark-public.s3.amazonaws.com/dataanalysis/loansData.csv"
download.file(fileUrl, destfile = "loansData.csv", method = "curl")
# Date of download
dateDownloaded <- date()
# Load data to R
loanData <- read.csv("loansData.csv")
str(loanData)
# Notice that the variables: Interest.Rate, Debt.To.Income.Ratio are factors with % sign and Loan.Length is factor with text "months". The data needs to be cleaned by removing % sign. I will just leave the text "months" as it is for now.
# Display data: column names and data type
sapply(loanData, class)
# Notice that the variables: Interest.Rate, Debt.To.Income.Ratio are factors with % sign and Loan.Length is factor with text "months". The data needs to be cleaned by removing % sign. I will just leave the text "months" as it is for now.
# Display data: column names and data type
sapply(loanData, class)
# Display first few rows of data, last rows -> tail()
head(loanData)
## Now I need to find out if some observations have missing attributes or not, and then to deal with missing data
## Check for missing data
# Identifies total no. of missing values
sum(is.na(loanData))
# The result indicate that there are 7 missing values. Now to identify the loan attributes with missing data
# Identifies column names with missing data
names(loanData[, !complete.cases(t(loanData))]) # t() -> transpose
# Data cleanup
# Remove rows with NA's
loanData <- loanData[complete.cases(loanData), ]
# Remove column with xx% to numeric variables
loanData$Interest.Rate <- as.numeric(strsplit(as.character(loanData$Interest.Rate),"%"))
loanData$Debt.To.Income.Ratio <- as.numeric(strsplit(as.character(loanData$Debt.To.Income.Ratio), "%"))
loanData$FICO <- paste(loanData$FICO_range_low, loanData$FICO_range_high, sep = "-")
meanFICO <- function(x) (as.numeric(substr(x, 1, 3)) + as.numeric(substr(x, 5, 7)))/2
loanData$FICO.Mean <- sapply(loanData$FICO.Range, meanFICO)
# Remove monthly income outlier since some monthly income are greater than $50000
loanData <- loanData[which(loanData$Monthly.Income < 50000), ]
# Data exploration
# Set plot display to 1 row and 2 graphs
par(mfrow = c(1, 1))
# Plot interest rate and check for normal distribution
hist(loanData$Interest.Rate, col = "blue", xlab = "Interest Rate", main = "Histogram")
qqnorm(loanData$Interest.Rate)
qqline(loanData$Interest.Rate, col = "red", lwd = 1.5)
getwd()
